.wrapper {
  padding: 30px 50px 50px;
}
h1 {
  display: block;
  width: 100%;
  text-align: center;
}
.form {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.label {
  display: block;
  width: 100%;
  text-align: left;
  padding-left: 20px;
  font-size: 14px;
  font-weight: 700;
}
.form_control {
  display: block;
  width: 300px;
  height: 40px;
  margin: 10px;
  padding-left: 20px;
  border-radius: 10px;
  border: none;
  background-color: rgb(232, 240, 254);
  opacity: 0.5;
  color: gray;
}
.form_control:nth-child(2) {
  margin-bottom: 20px;
}
.form_control:focus {
  color: black;
  background-color: rgb(232, 240, 254);
  opacity: 1;
}
.form_control::placeholder {
  color: gray;
}
.form_control:active {
  color: black;
}
.changeLogin {
  font-size: 0.8rem;
}
.login_button {
  position: relative;
  width: 320px;
  height: 2rem;
  margin-top: 20px;
  color: rgba(255, 255, 255, 0.8);
  background: #ff3366;
  font-size: 1rem;
  border-radius: 3rem;
  border: none;
  cursor: pointer;
  overflow: hidden;
  transition: width 0.3s 0.15s, font-size 0.1s;
}
:root {
  --background-color: #fff;
  --main-color: #6002ee;
  --label-color: #0000008a;
  --font-color: #000000de;
  --red: #ed2553;
  --blue: #2196f3;
  --green: #60bc79;
  --gray: #757575;
  --width: 380px;
  --trasition-delay: 0.2s;
}

*,
*::after,
*::before {
  box-sizing: border-box;
}



.input_container {
  position: relative;
  margin-top: 10px;
}

/* .input_container label {
  font-size: 0.9rem;
  color: var(--label-color);
} */



/*
input 요소가 포거스 상태 또는 valid 상태이면 레이블을 input 요소 위에 위치시키고 크기를 줄인다.
input 요소에 require가 적용되어 있어서 값이 입력되어 있으면 valid 상태가 된다.
input 요소가 포거스 상태가 아닐 때 텍스트가 입력되지 있지 않으면 invalid 상태가 되어 레이블이 제자리로 복귀하고
텍스트가 입력되어 있으면 valid 상태가 되어 레이블이 제자리로 복귀하지 않는다.
*/
.input_container input:focus + label,
.input_container input:valid + label {
  top: -65%;
  font-size: 0.8rem;
}
.input_container input + label {
  position: absolute;
  top: 0;
  left: 0.4rem;
  line-height: 60px;
  cursor: pointer;
  transition: var(--trasition-delay) ease;
}

.input_container .bar {
  position: absolute;
  left: 0;
  bottom: 0;
  background: var(--label-color);
  width: 100%;
  height: 1px;
}

.input_container .bar:before,
.input_container .bar:after {
  content: '';
  position: absolute;
  background: var(--main-color);
  width: 0;
  height: 2px;
  transition: var(--trasition-delay) ease;
}

.input_container .bar:before {
  left: 50%;
}

.input_container .bar:after {
  right: 50%;
}

.input_container input:focus ~ .bar:before,
.input_container input:focus ~ .bar:after {
  width: 50%;
}

.input_container .icon {
  width: 24px;
  height: 24px;
  position: absolute;
  top: 2.3rem;
  right: 1rem;
  font-size: 1.4rem; 
  cursor: pointer;
}

.input_container .icon.icon_success {
  color: var(--blue);
}

.input_container .icon.icon_error {
  color: var(--red);
}

.input_container .error {
  position: absolute;
  top: 120%;
  left: 0.4rem;
  font-size: 0.8rem;
  color: var(--red);
}

.button {
  width: 100%;
  line-height: 64px;
  font-weight: 900;
  font-size: 1.2rem;
  margin: 65px 0 20px;
  border: 3px solid transparent;
  background-color: var(--main-color);
  color: #fff;
  cursor: pointer;
  outline: none;
}

.button:disabled {
  background-color: transparent;
  border: 3px solid rgba(0, 0, 0, 0.1);
  color: rgba(0, 0, 0, 0.2);
}

.link {
  margin: 10px 0 20px;
  color: var(--label-color);
  text-align: center;
  transition: var(--trasition-delay) ease;
}

.link > a:hover {
  color: var(--main-color);
}

.hidden {
  display: none !important;
}